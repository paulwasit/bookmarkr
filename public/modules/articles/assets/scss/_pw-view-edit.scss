
/* overwrite default height of 300px for CodeMirror (coupled w/ viewportMargin=Infinity)*/
$pw-heading-color: #d34e39;
$pw-color: #333; /*373f47 47525d */
$pw-font-family: 'Open Sans', 'Source Sans Pro', sans-serif;
$pw-font-size: 18px;
$pw-font-size-xs: 16px;
$pw-line-height: 1.65em;
$pw-text-padding: 50px;
$pw-header-padding: 45px; 
$pw-article-bg: transparent;

@mixin slide-params($width, $height, $ratio) {
  width: calc(#{$height} * #{$ratio});
	height: calc(#{$width} / #{$ratio});
	max-width: $width;
	max-height: $height;
	
	/* 
	width  = min ( screenHeight * ratio, screenWidth )
	height = min ( screenWidth / ratio, screenHeight )
	*/
}


pw-article-view-edit {
	
	/*
	 * slide is used when not in fullscreen mode; it is positioned and sized inside its container;
	 * tab-inner-content is just the content
	 * slideFullscreen stretches to fit the entire viewport, in order to add a backdrop
	 * tab-inner-content is the actual slide which gets sized
	*/
	
	.slide, .slideFullscreen > .tab-inner-content {
		box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
		transition: all 0.6s ease-in-out;
		position: absolute !important; 
		background-color: #fff;
		border-radius: 5px;
	}
	
	.slide > .tab-inner-content, .slideFullscreen > .tab-inner-content { padding: 40px 60px; }
	
	.slide {
		top: 10px;
		left: 50%; /* left at half the container width */
		transform: translate(-50%); /* left minus half the element width */
	
		/* stretch the content to the slide size */
		> .tab-inner-content {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
		}
	}
	
	/* reduce padding on small screens */
	@media (max-width: $screen-xs-max) { .slide { @include slide-params(100vw, calc(100vh - 66px), 3/2); } }
	@media (min-width: $screen-sm-min) { .slide { @include slide-params(60vw, 60vh, 3/2); }	}
	
	.slideFullscreen {
		position: fixed !important;
		top: 0;
    left: 0;
    right: 0;
    bottom: 0;
		background-color: #000 !important; /* backdrop color */
		z-index: 2000;
	
		> .tab-inner-content {
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			@include slide-params(80vw, 80vh, 3/2);
		}
		
	}
	
	/* reduce padding on small screens */
	@media (max-width: $screen-xs-max) { .slideFullscreen > .tab-inner-content { @include slide-params(100vw, 100vh, 3/2); } }
	@media (min-width: $screen-sm-min) { .slideFullscreen > .tab-inner-content { @include slide-params(85vw, 85vh, 3/2); } }
	@media (min-width: $screen-md-min) { .slideFullscreen > .tab-inner-content { @include slide-params(75vw, 75vh, 3/2); } }
	@media (min-width: $screen-lg-min) { .slideFullscreen > .tab-inner-content { @include slide-params(65vw, 65vh, 3/2); } }
	
	/* pagination for slides: same as xs not-slide*/
	.slide .pagination-container {
		position: fixed;
		bottom:0;
		left:0;
		margin-bottom:0 !important;
		background-color: $body-bg;
		z-index:100;
		> .pagination { 
			margin-top: 20px !important;
			margin-bottom: 20px !important;
			.fa { font-size: 10px !important; }
		}
	}
	
	.slide .toggleFullscreen {
		position: absolute;
		bottom: 0;
		right: 0;
		width: 80px;
		height: 80px;
	}
	
	.CodeMirror {
		height: auto;
		background-color: $pw-article-bg;
		font-size: $pw-font-size;
		line-height: $pw-line-height;
		margin-bottom: 1.4em;
		//padding-bottom: $pw-text-padding;
		border: 1px solid #ddd;

		pre {
			padding: 0; /* Horizontal padding of content */
		}
		
		.cm-header {
			font-family: 'League Spartan', Avenir, sans-serif;
			color: $pw-heading-color;
			text-transform: uppercase;
			letter-spacing: 1px;
		}
		
		.CodeMirror-sizer {
			margin-bottom: 20px !important;
		}
	}
	
	.row {
		
		.article-header {
			background-color: transparent;
			color: $pw-heading-color;
			font-weight: bold;
			font-size: 2em;
			font-family: 'League Spartan', Avenir, sans-serif;
			letter-spacing: 2px;
			text-transform: uppercase;
			padding: $pw-header-padding 0;
			margin-bottom: 0;
		}
	
		
		.katex {
			max-width:100%;
			font-size:1.1em;
			//font-size: 3vw; 
			white-space: normal;
			overflow-wrap: break-word;
			word-wrap: break-word;
			.katex-html, .katex-html .base {
				max-width:100%;
			}
		}
		
		// class for the dragged selected item
		.article-toc-ghost {
			background-color: lighten($pw-heading-color,45%);
		}
		
		/* content text - outside edit */
		.tab-pane {
			
			position:relative;
			color: $pw-color;
			
			background-color: $pw-article-bg; /* #f7f7f7 */
			border-width: 0;
			padding: 0;
			
			&.active > .row {
				padding: 0;
				
				&.page-title {
					padding: 20px 0 0 $pw-text-padding;
				}
			}
			
			.not-codemirror, .CodeMirror-scroll {
				padding: 20px $pw-text-padding;
				font-family: $pw-font-family;
				color: $pw-color;
			}
			
			textarea[name='tab_edit'] {
				min-width: 100%;
				max-width: 100%;
				border-width: 0 1px 0 0;
			}
			
			img {
				max-width: 100%;
				width: auto;
				height: auto;
			}

			/* headings */
			h1, h2, h3, h4, h5, h6 {

				margin-top: 40px;
				margin-bottom: 10px;
				
				font-family: 'League Spartan', Avenir, sans-serif;
				color: $pw-heading-color;
				text-transform: uppercase;
				letter-spacing: 1px;
				
				+ h1, + h2, + h3, + h4, + h5, + h6 {
					margin-top: 0;
				}
			}
			
			/* paragraphs & lists */
			p, ul, ol {
				font-size: $pw-font-size;
				line-height: $pw-line-height;
				margin-bottom: 1.1em;
			}
			
			
			ul p, ul ul, ul ol, ol p, ol ul, ol ol {
				font-size: 1em;
				margin-bottom: 1em;		
			}
			
			/*
			p > ul, p > ol {
				margin-bottom: 1em;
			}
			*/
			
			li > p {
				margin-bottom: 0.5em;
			}
			/* no margin for first child */
			h1, h2, h3, h4, h5, h6, p {
				&:first-child {
					margin-top: 0;
				}
			}
			
			code {
				color: #bf1340;
			}
			
			/* code area (highlightjs) */
			.not-codemirror pre {
				margin: 25px 0 30px 0;
				padding: 14px;
				font-size: 1.1em;
				line-height: 1.6;
				color: #333333;
				background-color: #f1f1f1;
				border: 0;
				border-left: 4px solid #ccc;
				border-radius: 0;
			}
			
			.pagination-container {
				margin-bottom: 30px;
				> .pagination { 
					padding:0; 
					.fa { font-size: 14px; }
				}
			}
			
		}

	}
	
	/* ---------- size dependant css ---------- */
	
	@media (max-width: $screen-xs-max) {
		
		.col-xs-nomargin {
			background-color: $pw-article-bg;
		}
		/* reduce padding for max readability when small real estate */
		.page-title, .not-codemirror, .CodeMirror-scroll {
			padding-left: 5px !important;
			padding-right: 5px !important;
		}
		
		.page-title {
			padding-top: 5px !important;
		}
		
		/* make the text at the bottom stops before pagination dots */
		.not-codemirror, .CodeMirror-scroll {
			padding-bottom: $pw-text-padding !important;
		}
		
		.not-codemirror pre {
			font-size: 1em !important;
		}
		
		/* make pagination dots always visible, reduce their size */
		.pagination-container {
			position: fixed;
			width: 100%;
			margin:0 !important;
			bottom:0;
			left:0;
			background-color: $body-bg;
			z-index:100;
			> .pagination { 
				margin-top: 20px !important;
				margin-bottom: 20px !important;
				.fa { font-size: 10px !important; }
			}
		}
		
		/* smaller font size */
		.CodeMirror, .tab-pane p, .tab-pane ul, .tab-pane ol{
			font-size: $pw-font-size-xs !important;
		}
	}
	
	/* toc visible above the text up to medium sized screens (not on the side) */
	@media (max-width: $screen-md-max) {
		
		/* toc above text */
		.pw-article-content {
			position: relative;
		}
		.tocContainer {
			position: fixed;
			padding: 0;
			left: 0;
			top: $navbar-height;
			bottom: 0;
			overflow: auto;
			width: 100%;
			//max-width:400px;
			background-color: rgb(0,0,0); /* Fallback color */
			background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
			z-index: 150; /* to be above the pagination*/
			
			> .tag-list {
				width: 100%;
				max-width:320px;
				background-color: #fff;
				margin-top: 0;
				padding: 10px;
				border-right: 1px solid #ddd;
			}
		}
		
		.tag-list-item {
			padding-top: 10px;
			padding-bottom: 10px;
			border-bottom: 1px solid #ddd;
			font-size: $pw-font-size-xs;
			
			markedtoc ul { 
				margin-bottom: 0; 
				li { margin-top: 10px; }
			}
		}
	}
	
	/* disable toc collapse on large screens*/
	@media (min-width: $screen-lg-min) {
		.tocContainer.collapse {
			display:block;
		}
	}
	
}

